version: "3.7"
services:
  configurator:
    build:
      context: .
      dockerfile: configurator/Dockerfile-configurator
    environment:
      - BACKEND_ENDPOINT=http://balancer:30000
    networks:
      - envoymesh
    ports:
      - "8050:8050"
    links:
      - "balancer"
    depends_on:
      - "balancer"
  balancer:
    build:
      context: .
      dockerfile: envoy-balancer/Dockerfile-balancer
    ports:
      - "8001:8001"
      - "30000:30000"
    networks:
      - envoymesh
    depends_on:
    - "backend-1"
    - "backend-2"
    - "backend-3"
    - "backend-4"
  backend-1:
    build:
      context: .
      dockerfile: backend/Dockerfile-backend
    environment:
      - DB=mongodb://mongo:27017
      - ATTEMPTS=10
      - HOST=backend-1
    networks:
      - envoymesh
    volumes:
      - ./logs:/logs
    depends_on:
      - "mongo"
  backend-2:
    build:
      context: .
      dockerfile: backend/Dockerfile-backend
    environment:
      - DB=mongodb://mongo:27017
      - ATTEMPTS=10
      - HOST=backend-2
    networks:
      - envoymesh
    volumes:
      - ./logs:/logs\
    depends_on:
      - "mongo"
  backend-3:
    build:
      context: .
      dockerfile: backend/Dockerfile-backend
    environment:
      - DB=mongodb://mongo:27017
      - ATTEMPTS=10
      - HOST=backend-3
    networks:
      - envoymesh
    volumes:
      - ./logs:/logs
    depends_on:
      - "mongo"
  backend-4:
    build:
      context: .
      dockerfile: backend/Dockerfile-backend
    environment:
      - DB=mongodb://mongo:27017
      - ATTEMPTS=10
      - HOST=backend-4
    networks:
      - envoymesh
    volumes:
      - ./logs:/logs
    depends_on:
      - "mongo"
  mongo:
    image: mongo:5.0.5
    restart: always
    networks:
      - envoymesh
    environment:
      - MONGO_DATA_DIR=/usr/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/db:/usr/data/db
    ports:
      - "27017:27017"
networks:
  envoymesh:
    driver: bridge
